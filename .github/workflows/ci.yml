name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      redis:
        image: redis
        ports:
          - 6379:6379
        options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=3
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        extensions: mbstring, zip, exif, pcntl, gd, redis
        coverage: xdebug
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    
    - name: Install Composer dependencies
      run: composer install --prefer-dist --no-interaction --no-progress
    
    - name: Install NPM dependencies
      run: npm install
    
    - name: Generate key
      run: php artisan key:generate
    
    - name: Directory permissions
      run: chmod -R 777 storage bootstrap/cache
    
    - name: Build assets
      run: npm run build
    
    - name: Run tests
      run: php artisan test --coverage
    
    - name: Run static analysis
      run: composer analyse
    
    - name: Run code style check
      run: composer lint
  
  deploy:
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: thrnz/earthvr-custom-tours:latest
        cache-from: type=registry,ref=thrnz/earthvr-custom-tours:buildcache
        cache-to: type=registry,ref=thrnz/earthvr-custom-tours:buildcache,mode=max
    
    # Add deployment steps for your hosting platform (Google Cloud Run, App Engine, etc.)
    # Example for Google Cloud Run:
    # - name: Setup Google Cloud SDK
    #   uses: google-github-actions/setup-gcloud@v1
    #   with:
    #     project_id: ${{ secrets.GCP_PROJECT_ID }}
    #     service_account_key: ${{ secrets.GCP_SA_KEY }}
    
    # - name: Deploy to Cloud Run
    #   run: |
    #     gcloud run deploy earthvr-custom-tours \
    #       --image thrnz/earthvr-custom-tours:latest \
    #       --platform managed \
    #       --region us-central1 \
    #       --allow-unauthenticated \
    #       --set-env-vars="MAPS_API_KEY=${{ secrets.MAPS_API_KEY }}"